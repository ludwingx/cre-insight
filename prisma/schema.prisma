generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  username  String   @unique
  password  String
  role      String   @default("user") // admin, user, analyst
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Post {
  id               Int       @id @default(autoincrement())
  id_publicacion   String    @unique
  plataforma       String
  fecha            DateTime
  timestamp        String
  texto            String
  me_gusta         Int
  comentarios      Int
  compartidos      Int
  hashtags         String[]  // guardaremos como array nativo de Postgres
  tiene_imagen     Boolean   @default(false)
  url_imagen       String?
  url_publicacion  String
  seguimiento      Boolean   @default(true)  
  created_at       DateTime  @default(now())
  updated_at       DateTime  @updatedAt
  metrics          PostMetrics[]
}


model PostMetrics {
  id          Int      @id @default(autoincrement())
  postId      Int
  post        Post     @relation(fields: [postId], references: [id])
  likes       Int      @default(0)
  comments    Int      @default(0)
  shares      Int      @default(0)
  views       Int?     // opcional: depende de la red
  collectedAt DateTime @default(now()) // snapshot hist√≥rico
}

model Mention {
  id               Int      @id @default(autoincrement())
  sourceName       String   // nombre del perfil o grupo que menciona
  sourceUrl        String   // enlace al perfil/grupo/post
  platform         String   // Facebook, Instagram, TikTok
  content          String
  mentionUrl       String   @unique
  sentiment        String?  // positivo, negativo, neutro
  publishedAt      DateTime
  collectedAt      DateTime @default(now())
}
